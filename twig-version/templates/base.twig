<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}TicketStressed - Twig Version{% endblock %}</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="icon" type="image/svg+xml" href="/assets/app-logo.svg" />
    <style>
        button {
            cursor: pointer;
        }

        .backdrop-blur-xs {
            --tw-backdrop-blur: blur(4px);
            -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
            backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
        }

        input {
            outline: none;
        }
        
        @keyframes pulse {
            0%, 100% { opacity: 0.6; }
            50% { opacity: 0.8; }
        }
        
        @keyframes bounce {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-10px); }
        }
        
        .animate-pulse { animation: pulse 3s ease-in-out infinite; }
        .animate-bounce { animation: bounce 1s ease-in-out infinite; }
    </style>
        <link rel="stylesheet" href="/assets/toast.css" />
</head>
<body class="font-sans flex justify-center items-center">
    {% block content %}{% endblock %}
        <script src="/assets/toast.js"></script>
            <script>
                // Show session flash messages passed as Twig global `flash`
                (function(){
                    const flashes = {{ flash|json_encode()|raw }} || [];
                    if (Array.isArray(flashes)) {
                        flashes.forEach(f => {
                            if (!f || !f.type) return;
                            const type = f.type;
                            const msg = f.message || '';
                            if (type === 'error') window.toast.error(msg);
                            else if (type === 'success') window.toast.success(msg);
                            else if (type === 'info') window.toast.info(msg);
                            else if (type === 'warn') window.toast.warn(msg);
                            else window.toast.show(msg);
                        });
                    }
                })();
            </script>
</body>
</html>
